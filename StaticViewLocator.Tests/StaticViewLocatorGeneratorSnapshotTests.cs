using System.Threading.Tasks;
using StaticViewLocator.Tests.TestHelpers;
using Xunit;

namespace StaticViewLocator.Tests;

public class StaticViewLocatorGeneratorSnapshotTests
{
    [Fact]
    public async Task GeneratesAttributeAndLocatorSources()
    {
        const string input = @"
using Avalonia.Controls;
using StaticViewLocator;

namespace TestApp.ViewModels
{
    public abstract class ViewModelBase
    {
    }

    public class MainWindowViewModel : ViewModelBase
    {
    }

    public class TestViewModel : ViewModelBase
    {
    }

    public abstract class IgnoredViewModel : ViewModelBase
    {
    }
}

namespace TestApp.Views
{
    public class TestView : UserControl
    {
    }
}

namespace TestApp
{
    [StaticViewLocator]
    public partial class ViewLocator
    {
    }
}
";

        const string expectedAttribute = "// <auto-generated />\nusing System;\n\nnamespace StaticViewLocator;\n\n[AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)]\npublic sealed class StaticViewLocatorAttribute : Attribute\n{\n}\n";

        const string expectedLocator = "// <auto-generated />\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing Avalonia.Controls;\n\nnamespace TestApp;\n\npublic partial class ViewLocator\n{\n\tprivate static Dictionary<Type, Func<Control>> s_views = new()\n\t{\n\t\t[typeof(TestApp.ViewModels.MainWindowViewModel)] = () => new TextBlock() { Text = \"Not Found: TestApp.Views.MainWindowView\" },\n\t\t[typeof(TestApp.ViewModels.TestViewModel)] = () => new TestApp.Views.TestView(),\n\t};\n}\n";

        await StaticViewLocatorGeneratorVerifier.VerifyGeneratedSourcesAsync(
            input,
            ("StaticViewLocatorAttribute.cs", expectedAttribute),
            ("ViewLocator_StaticViewLocator.cs", expectedLocator));
    }

    [Fact]
    public async Task GeneratesMappingsForMultipleLocators()
    {
        const string input = @"
using Avalonia.Controls;
using StaticViewLocator;

namespace App.Modules.Admin
{
    [StaticViewLocator]
    public partial class AdminViewLocator
    {
    }

    public class AdminDashboardViewModel
    {
    }

    public class AdminDashboardView : UserControl
    {
    }
}

namespace App.Modules.Client
{
    [StaticViewLocator]
    public partial class ClientViewLocator
    {
    }

    public class ClientDashboardViewModel
    {
    }

    public class ClientDashboardView : UserControl
    {
    }
}

namespace App.Modules.Shared
{
    public class ActivityLogViewModel
    {
    }
}
";

        const string expectedAttribute = "// <auto-generated />\nusing System;\n\nnamespace StaticViewLocator;\n\n[AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)]\npublic sealed class StaticViewLocatorAttribute : Attribute\n{\n}\n";

        const string expectedAdminLocator = "// <auto-generated />\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing Avalonia.Controls;\n\nnamespace App.Modules.Admin;\n\npublic partial class AdminViewLocator\n{\n\tprivate static Dictionary<Type, Func<Control>> s_views = new()\n\t{\n\t\t[typeof(App.Modules.Admin.AdminDashboardViewModel)] = () => new App.Modules.Admin.AdminDashboardView(),\n\t\t[typeof(App.Modules.Client.ClientDashboardViewModel)] = () => new App.Modules.Client.ClientDashboardView(),\n\t\t[typeof(App.Modules.Shared.ActivityLogViewModel)] = () => new TextBlock() { Text = \"Not Found: App.Modules.Shared.ActivityLogView\" },\n\t};\n}\n";

        const string expectedClientLocator = "// <auto-generated />\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing Avalonia.Controls;\n\nnamespace App.Modules.Client;\n\npublic partial class ClientViewLocator\n{\n\tprivate static Dictionary<Type, Func<Control>> s_views = new()\n\t{\n\t\t[typeof(App.Modules.Admin.AdminDashboardViewModel)] = () => new App.Modules.Admin.AdminDashboardView(),\n\t\t[typeof(App.Modules.Client.ClientDashboardViewModel)] = () => new App.Modules.Client.ClientDashboardView(),\n\t\t[typeof(App.Modules.Shared.ActivityLogViewModel)] = () => new TextBlock() { Text = \"Not Found: App.Modules.Shared.ActivityLogView\" },\n\t};\n}\n";

        await StaticViewLocatorGeneratorVerifier.VerifyGeneratedSourcesAsync(
            input,
            ("StaticViewLocatorAttribute.cs", expectedAttribute),
            ("AdminViewLocator_StaticViewLocator.cs", expectedAdminLocator),
            ("ClientViewLocator_StaticViewLocator.cs", expectedClientLocator));
    }
}
